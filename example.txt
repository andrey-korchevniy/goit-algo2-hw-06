–†–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–æ–≤–æ—ó –≤–µ—Ä—Å—ñ—ó MapReduce
–û–¥–Ω–∏–º —ñ–∑ –Ω–∞–π–±—ñ–ª—å—à –ø–æ—à–∏—Ä–µ–Ω–∏—Ö –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω—å MapReduce —î –æ–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—ñ–≤. –ü–æ—á–Ω–µ–º–æ –∑ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–æ–≤–æ—ó –≤–µ—Ä—Å—ñ—ó MapReduce, —è–∫–∞ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏–º–µ –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å–ª—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ.

–°—Ç–≤–æ—Ä–∏–º–æ —Ç—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—ó: –æ–¥–Ω—É –¥–ª—è —Ñ–∞–∑–∏ Map, –æ–¥–Ω—É –¥–ª—è —Ñ–∞–∑–∏ Reduce —Ç–∞ —â–µ –æ–¥–Ω—É –¥–ª—è –ø—Ä–æ–º—ñ–∂–Ω–æ—ó —Ñ–∞–∑–∏ Shuffle.

–§—É–Ω–∫—Ü—ñ—è —Ñ–∞–∑–∏ Map –ø—Ä–∏–π–º–∞—Ç–∏–º–µ —Ä—è–¥–æ–∫ —Ç–µ–∫—Å—Ç—É —è–∫ –≤—Ö—ñ–¥ —ñ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏–º–µ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è, –¥–µ –∫–ª—é—á ‚Äî —Ü–µ —Å–ª–æ–≤–æ, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äî —Ü–µ 1, —â–æ –≤–∫–∞–∑—É—î –Ω–∞ –æ–¥–Ω–µ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è —Å–ª–æ–≤–∞.

def map_function(text):
    words = text.split()
    return [(word, 1) for word in words]



–û—Ç–∂–µ, —è–∫—â–æ –º–∏ –æ—Ç—Ä–∏–º–∞—î–º–æ —Ä—è–¥–æ–∫ "hello world hello Python hello Student", —Ç–æ –Ω–∞ –≤–∏—Ö–æ–¥—ñ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ —Å–ø–∏—Å–æ–∫ [('hello', 1), ('world', 1), ('hello', 1), ('Python', 1), ('hello', 1), ('Student', 1)]

–ü—ñ—Å–ª—è —Ñ–∞–∑–∏ Map, –ø–µ—Ä–µ–¥ —Ç–∏–º —è–∫ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç–∏ –¥–æ —Ä–µ–¥—É–∫—Ü—ñ—ó, –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–æ–º—ñ–∂–Ω—ñ –ø–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞–∫, —â–æ–± —É—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –æ–¥–Ω–æ–≥–æ –∫–ª—é—á–∞ –±—É–ª–∏ —Ä–∞–∑–æ–º. –¶–µ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è "shuffle".

def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key].append(value)
    return shuffled.items()



–§—É–Ω–∫—Ü—ñ—è shuffle_function —É –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ MapReduce –≤—ñ–¥—ñ–≥—Ä–∞—î –∫–ª—é—á–æ–≤—É —Ä–æ–ª—å —É –ø—Ä–æ—Ü–µ—Å—ñ "–ø–µ—Ä–µ—Ç–∞—Å—É–≤–∞–Ω–Ω—è" (Shuffle), —è–∫–∏–π —Å–ª—ñ–¥—É—î –∑–∞ –µ—Ç–∞–ø–æ–º Map —Ç–∞ –ø–µ—Ä–µ–¥—É—î –µ—Ç–∞–ø—É Reduce.

–ü—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –∫—Ä–æ–∫ Map –∑–∞–≤–µ—Ä—à–µ–Ω–æ —ñ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–æ –ø—Ä–æ–º—ñ–∂–Ω—ñ –ø–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è, –ø–µ—Ä–µ—Ç–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–±–µ–∑–ø–µ—á—É—î –≥—Ä—É–ø—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å –∑–∞ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –∫–ª—é—á–∞–º–∏ —Ä–∞–∑–æ–º, —â–æ–± –≤–æ–Ω–∏ –º–æ–≥–ª–∏ –±—É—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω—ñ –Ω–∞ –µ—Ç–∞–ø—ñ Reduce. –§—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î —Å–ø–∏—Å–æ–∫ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è, —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∏—Ö –Ω–∞ –µ—Ç–∞–ø—ñ Map [('hello', 1), ('world', 1), ('hello', 1), ('Python', 1), ('hello', 1), ('Student', 1)]. –î–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è –≥—Ä—É–ø—É—î –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫—ñ –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤–∏–π –∫–ª—é—á. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —î –∫–æ–ª–µ–∫—Ü—ñ—è, –¥–µ –∫–æ–∂–µ–Ω –∫–ª—é—á –∞—Å–æ—Ü—ñ–π–æ–≤–∞–Ω–∏–π –∑—ñ —Å–ø–∏—Å–∫–æ–º —É—Å—ñ—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –π–æ–º—É –∑–Ω–∞—á–µ–Ω—å [('hello', [1, 1, 1]), ('world', [1]), ('Python', [1]), ('Student', [1])].

–¶–µ–π –∫—Ä–æ–∫ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–∏–π –¥–ª—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –µ—Ç–∞–ø—É Reduce, –æ—Å–∫—ñ–ª—å–∫–∏ –≤—ñ–Ω –¥–æ–∑–≤–æ–ª—è—î —Ä–µ–¥—É–∫—Ç–æ—Ä–∞–º (—Ñ—É–Ω–∫—Ü—ñ—è–º Reduce) –æ–±—Ä–æ–±–ª—è—Ç–∏ –≤—Å—ñ –¥–∞–Ω—ñ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –æ–¥–Ω–æ—á–∞—Å–Ω–æ.



–§—É–Ω–∫—Ü—ñ—è Reduce –∞–≥—Ä–µ–≥—É–≤–∞—Ç–∏–º–µ –≤—Å—ñ –ø—Ä–æ–º—ñ–∂–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–ª—é—á–∞.

def reduce_function(shuffled_values):
    reduced = {}
    for key, values in shuffled_values:
        reduced[key] = sum(values)
    return reduced



–¢–µ–ø–µ—Ä, –∫–æ–ª–∏ —É –Ω–∞—Å —î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –º–æ–∂–µ–º–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –ø—Ä–æ—Ü–µ—Å MapReduce –Ω–∞ –ø—Ä–∏–∫–ª–∞–¥—ñ —Ç–µ–∫—Å—Ç—É.

# –í—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
text = "hello world hello Python hello Student"

# –ö—Ä–æ–∫ 1: –ú–∞–ø—ñ–Ω–≥
mapped_values = map_function(text)

# –ö—Ä–æ–∫ 2: Shuffle
shuffled_values = shuffle_function(mapped_values)

# –ö—Ä–æ–∫ 3: –†–µ–¥—É–∫—Ü—ñ—è
reduced_values = reduce_function(shuffled_values)



–¢–µ–ø–µ—Ä –æ–±'—î–¥–Ω–∞—î–º–æ —Ü—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å, —â–æ–± –≤–∏–∫–æ–Ω–∞—Ç–∏ –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å–ª—ñ–≤ –Ω–∞ –ø—Ä–∏–∫–ª–∞–¥—ñ —Ç–µ–∫—Å—Ç—É.

from collections import defaultdict

def map_function(text):
    words = text.split()
    return [(word, 1) for word in words]

def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key].append(value)
    return shuffled.items()

def reduce_function(shuffled_values):
    reduced = {}
    for key, values in shuffled_values:
        reduced[key] = sum(values)
    return reduced

# –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce
def map_reduce(text):
    # –ö—Ä–æ–∫ 1: –ú–∞–ø—ñ–Ω–≥
    mapped_values = map_function(text)

    # –ö—Ä–æ–∫ 2: Shuffle
    shuffled_values = shuffle_function(mapped_values)

    # –ö—Ä–æ–∫ 3: –†–µ–¥—É–∫—Ü—ñ—è
    reduced_values = reduce_function(shuffled_values)

    return reduced_values

if __name__ == '__main__':
    # –í—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
    text = "hello world hello Python hello Student"

    # –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce –Ω–∞ –≤—Ö—ñ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ
    result = map_reduce(text)

    print("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤:", result)



–¶–µ–π –∫–æ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø—Ä–æ—Ü–µ—Å MapReduce –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –∑–∞–¥–∞–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ. –§—É–Ω–∫—Ü—ñ—è map_function –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è, shuffle_function –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î —Ü—ñ –ø–∞—Ä–∏ –∑–∞ –∫–ª—é—á–∞–º–∏, –∞ reduce_function –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞.

–í–∏–≤–µ–¥–µ–Ω–Ω—è:

–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤: {'hello': 3, 'world': 1, 'Python': 1, 'Student': 1}



–ê–ª–µ —ñ–¥–µ—è MapReduce –ø–æ–ª—è–≥–∞—î –≤ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ–π –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö, —ñ –≤ —ñ–¥–µ–∞–ª—ñ –∫–æ–∂–µ–Ω –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ–π map_function —ñ reduce_function –ø–æ–≤–∏–Ω–µ–Ω –≤—ñ–¥–±—É–≤–∞—Ç–∏—Å—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, –æ—Å–æ–±–ª–∏–≤–æ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤–µ–ª–∏–∫–∏—Ö –¥–∞—Ç–∞—Å–µ—Ç—ñ–≤. 

–£ –±–∞–∑–æ–≤–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ, —è–∫–∏–π –º–∏ —Ä–æ–∑–≥–ª—è–Ω—É–ª–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Å–ø—Ä–æ—â–µ–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –±–µ–∑ —è–≤–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–µ–ª—ñ–∑–º—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó MapReduce.


–î–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ—Å—Ç—ñ –≤ Python –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–æ–¥—É–ª—ñ, —Ç–∞–∫—ñ —è–∫ concurrent.futures –¥–ª—è –ø–æ—Ç–æ–∫—ñ–≤ –∞–±–æ multiprocessing –¥–ª—è –ø—Ä–æ—Ü–µ—Å—ñ–≤.



üëâüèº –û–¥–Ω–∞–∫, –≤–∞–∂–ª–∏–≤–æ –∑–∞—É–≤–∞–∂–∏—Ç–∏, —â–æ —á–µ—Ä–µ–∑ Global Interpreter Lock (GIL) —É CPython, –±–∞–≥–∞—Ç–æ–ø–æ—Ç–æ–∫–æ–≤—ñ—Å—Ç—å —É Python –Ω–µ –∑–∞–≤–∂–¥–∏ –¥–æ–∑–≤–æ–ª—è—î –¥–æ—Å—è–≥—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—å–æ–≥–æ –ø–∞—Ä–∞–ª–µ–ª—ñ–∑–º—É –Ω–∞ —Ä—ñ–≤–Ω—ñ –¶–ü, –æ—Å–æ–±–ª–∏–≤–æ –¥–ª—è –æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–∏—Ö —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∏—Ö –∑–∞–¥–∞—á.


–ú–æ–¥–∏—Ñ—ñ–∫—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø—Ä–∏–∫–ª–∞–¥, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–æ–¥—É–ª—å concurrent.futures –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ–π map_function –Ω–∞ –∫–æ–∂–Ω–æ–º—É —Å–ª–æ–≤—ñ —Ç–µ–∫—Å—Ç—É —Ç–∞ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è reduce_function –Ω–∞ –∫–æ–∂–Ω–æ–º—É –∫–ª—é—á—ñ:

from concurrent.futures import ThreadPoolExecutor
from collections import defaultdict

def map_function(word):
    return word, 1

def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key].append(value)
    return shuffled.items()

def reduce_function(key_values):
    key, values = key_values
    return key, sum(values)

# –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce
def map_reduce(text):
    words = text.split()

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –ú–∞–ø—ñ–Ω–≥
    with ThreadPoolExecutor() as executor:
        mapped_values = list(executor.map(map_function, words))

    # –ö—Ä–æ–∫ 2: Shuffle
    shuffled_values = shuffle_function(mapped_values)

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –†–µ–¥—É–∫—Ü—ñ—è
    with ThreadPoolExecutor() as executor:
        reduced_values = list(executor.map(reduce_function, shuffled_values))

    return dict(reduced_values)

if __name__ == '__main__':
    # –í—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
    text = "hello world hello Python hello Student"

    # –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce –Ω–∞ –≤—Ö—ñ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ
    result = map_reduce(text)

    print("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤:", result)



–£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ map_function –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤—Ö—ñ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ThreadPoolExecutor.map, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ–±—Ä–æ–±–ª—è—Ç–∏ –∫–æ–∂–Ω–µ —Å–ª–æ–≤–æ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ. –ü—ñ—Å–ª—è –º–∞–ø—ñ–Ω–≥—É –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è shuffle_function –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —á–∞—Å—Ç–∏–Ω–∞, —â–æ –≤–∏–º–∞–≥–∞—î –∞–≥—Ä–µ–≥–∞—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤. –ù–∞—Ä–µ—à—Ç—ñ reduce_function —Ç–∞–∫–æ–∂ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞, –∞–≥—Ä–µ–≥—É—é—á–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞.



–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤: {'hello': 3, 'world': 1, 'Python': 1, 'Student': 1}



–ó—Ä–æ–±–∏–º–æ –Ω–∞—à –ø—Ä–∏–∫–ª–∞–¥ –±—ñ–ª—å—à —Å—Ö–æ–∂–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—É –∑–∞–¥–∞—á—É. –í–∏–∫–æ–Ω–∞—î–º–æ –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å–ª—ñ–≤ —É –∫–Ω–∏–∑—ñ. –î–ª—è —Ü—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –ø—Ä–æ—î–∫—Ç –ì—É—Ç–µ–Ω–±–µ—Ä–≥. –ü—Ä–æ—î–∫—Ç –ì—É—Ç–µ–Ω–±–µ—Ä–≥ ‚Äî —Ü–µ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∞ –∑ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –ø–æ—à–∏—Ä–µ–Ω–Ω—è –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∏—Ö —Ç–≤–æ—Ä—ñ–≤, —è–∫–∞ –±—É–ª–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–º–∏ –∫–Ω–∏–≥–∏ —Ç–∞ —ñ–Ω—à—ñ –≤–∏–¥–∞–Ω–Ω—è –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ—ó –∞—É–¥–∏—Ç–æ—Ä—ñ—ó —á–µ—Ä–µ–∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç. –ü—Ä–æ—î–∫—Ç –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞ —á–µ—Å—Ç—å –ô–æ–≥–∞–Ω–Ω–∞ –ì—É—Ç–µ–Ω–±–µ—Ä–≥–∞, –Ω—ñ–º–µ—Ü—å–∫–æ–≥–æ –≤–∏–Ω–∞—Ö—ñ–¥–Ω–∏–∫–∞, —è–∫–∏–π –≤–∏–Ω–∞–π—à–æ–≤ –∫–Ω–∏–≥–æ–¥—Ä—É–∫–∞—Ä—Å—Ç–≤–æ –∑ —Ä—É—Ö–æ–º–∏–º–∏ –º–µ—Ç–∞–ª–µ–≤–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏ —É 15 —Å—Ç–æ–ª—ñ—Ç—Ç—ñ.



–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–∫—Å—Ç —ñ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–æ–≥–æ URL –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É requests. –°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ü—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ pip install requests.



–ü—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ —Ä–µ–∞–ª—ñ–∑—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î requests –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∑–∞ URL.

def get_text(url):
    try:
        response = requests.get(url)
        response.raise_for_status()  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ HTTP
        return response.text
    except requests.RequestException as e:
        return None



–ù–∞—à–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î requests.get –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è GET-–∑–∞–ø–∏—Ç—É –¥–æ –≤–∫–∞–∑–∞–Ω–æ–≥–æ URL. –Ø–∫—â–æ –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π, –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–æ–∫, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –∞–±–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î None.



–ü–æ–≤–Ω–∏–π –∫–æ–¥:

from concurrent.futures import ThreadPoolExecutor
from collections import defaultdict

import requests

def get_text(url):
    try:
        response = requests.get(url)
        response.raise_for_status()  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ HTTP
        return response.text
    except requests.RequestException as e:
        return None

def map_function(word):
    return word, 1

def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key].append(value)
    return shuffled.items()

def reduce_function(key_values):
    key, values = key_values
    return key, sum(values)

# –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce
def map_reduce(text):
    words = text.split()

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –ú–∞–ø—ñ–Ω–≥
    with ThreadPoolExecutor() as executor:
        mapped_values = list(executor.map(map_function, words))

    # –ö—Ä–æ–∫ 2: Shuffle
    shuffled_values = shuffle_function(mapped_values)

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –†–µ–¥—É–∫—Ü—ñ—è
    with ThreadPoolExecutor() as executor:
        reduced_values = list(executor.map(reduce_function, shuffled_values))

    return dict(reduced_values)

if __name__ == '__main__':
    # –í—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
    url = "<https://gutenberg.net.au/ebooks01/0100021.txt>"
    text = get_text(url)
    if text:
        # –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce –Ω–∞ –≤—Ö—ñ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ
        result = map_reduce(text)

        print("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤:", result)
    else:
        print("–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç.")



–ú–∏ –±—É–¥–µ–º–æ –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ä–æ–º–∞–Ω ‚Äú1984‚Äù –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ–≥–æ –ø–∏—Å—å–º–µ–Ω–Ω–∏–∫–∞ –î–∂–æ—Ä–¥–∂–∞ –û—Ä–≤–µ–ª–ª–∞, —è–∫–∏–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º https://gutenberg.net.au/ebooks01/0100021.txt.



–í–∏–≤–µ–¥–µ–Ω–Ω—è–º –±—É–¥–µ –≤–µ–ª–∏–∫–∏–π —Å–ª–æ–≤–Ω–∏–∫ –∑—ñ —Å–ª–æ–≤–∞–º–∏ —Ç–∞ —ó—Ö –∫—ñ–ª—å–∫—ñ—Å—Ç—é –≤ —Ç–µ–∫—Å—Ç—ñ:

–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤: {'Project': 6, 'Gutenberg': 6, 'Australia': 6, 'Title:': 2, ...}



–í–¥–æ—Å–∫–æ–Ω–∞–ª–∏–º–æ –Ω–∞—à MapReduce —Ç–∞ –≤–∏–∫–æ–Ω–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏. –ü–æ-–ø–µ—Ä—à–µ, –¥–æ–¥–∞–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—ó. –¶–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ, —â–æ–± –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞, —ñ–≥–Ω–æ—Ä—É—é—á–∏ –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—ó. –î—Ä—É–≥–∏–º –∫—Ä–æ–∫–æ–º –≤–∏–∫–æ–Ω–∞—î–º–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é —Ñ—É–Ω–∫—Ü—ñ—ó map_reduce. 

–¢–µ–ø–µ—Ä –≤–æ–Ω–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî —Å–ø–∏—Å–æ–∫ —Å–ª—ñ–≤, –¥–ª—è —è–∫–∏—Ö –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω–Ω—è. –Ø–∫—â–æ —Å–ø–∏—Å–æ–∫ –Ω–µ –∑–∞–¥–∞–Ω–æ, —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –ø—ñ–¥—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å–ª—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ.

import string

from concurrent.futures import ThreadPoolExecutor
from collections import defaultdict

import requests

def get_text(url):
    try:
        response = requests.get(url)
        response.raise_for_status()  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ HTTP
        return response.text
    except requests.RequestException as e:
        return None

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—ó
def remove_punctuation(text):
    return text.translate(str.maketrans("", "", string.punctuation))

def map_function(word):
    return word, 1

def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key].append(value)
    return shuffled.items()

def reduce_function(key_values):
    key, values = key_values
    return key, sum(values)

# –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce
def map_reduce(text, search_words=None):
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—ó
    text = remove_punctuation(text)
    words = text.split()

    # –Ø–∫—â–æ –∑–∞–¥–∞–Ω–æ —Å–ø–∏—Å–æ–∫ —Å–ª—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É, –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ü—ñ —Å–ª–æ–≤–∞
    if search_words:
        words = [word for word in words if word in search_words]

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –ú–∞–ø—ñ–Ω–≥
    with ThreadPoolExecutor() as executor:
        mapped_values = list(executor.map(map_function, words))

    # –ö—Ä–æ–∫ 2: Shuffle
    shuffled_values = shuffle_function(mapped_values)

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –†–µ–¥—É–∫—Ü—ñ—è
    with ThreadPoolExecutor() as executor:
        reduced_values = list(executor.map(reduce_function, shuffled_values))

    return dict(reduced_values)

if __name__ == '__main__':
    # –í—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
    url = "<https://gutenberg.net.au/ebooks01/0100021.txt>"
    text = get_text(url)
    if text:
        # –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce –Ω–∞ –≤—Ö—ñ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ
        search_words = ['war', 'peace', 'love']
        result = map_reduce(text, search_words)

        print("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤:", result)
    else:
        print("–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç.")



–í–∏–≤–µ–¥–µ–Ω–Ω—è:

–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤: {'war': 106, 'peace': 6, 'love': 27}



–§—É–Ω–∫—Ü—ñ—è remove_punctuation –≤–∏–¥–∞–ª—è—î –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—ó –∑ —Ç–µ–∫—Å—Ç—É –ø–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –≤—ñ–Ω –±—É–¥–µ –æ–±—Ä–æ–±–ª–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ—î—é MapReduce. –¶–µ –∑–∞–±–µ–∑–ø–µ—á—É—î —Ç–æ—á–Ω—ñ—à–∏–π –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å–ª—ñ–≤. –¢–∞–∫–æ–∂ –∑–º—ñ–Ω–∏–ª–∏—Å—è –ª–æ–≥—ñ–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó map_reduce. –¢–µ–ø–µ—Ä –≤–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∑–∞–¥–∞–Ω–æ —Å–ø–∏—Å–æ–∫ —Å–ª—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É. –Ø–∫—â–æ —Ç–∞–∫, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –≤—Ä–∞—Ö–æ–≤—É—î —Ç—ñ–ª—å–∫–∏ —Ü—ñ —Å–ª–æ–≤–∞, —ñ–≥–Ω–æ—Ä—É—é—á–∏ —ñ–Ω—à—ñ. –¶–µ –¥–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ MapReduce –¥–ª—è –ø–æ—à—É–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —Å–ª—ñ–≤, –∞ –Ω–µ –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤—Å—ñ—Ö —Å–ª—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ.



üëâüèº –ü–µ—Ä–µ–≤–∞–≥–∏ —Ä–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–æ–≥–æ MapReduce —Å—Ç–∞—é—Ç—å –ø–æ–º—ñ—Ç–Ω–∏–º–∏ –ª–∏—à–µ —Ç–æ–¥—ñ, –∫–æ–ª–∏ –∑–∞–¥–∞—á—ñ —Ä–æ–∑–ø–æ–¥—ñ–ª—è—é—Ç—å—Å—è –º—ñ–∂ –∫—ñ–ª—å–∫–æ–º–∞ —Ñ—ñ–∑–∏—á–Ω–∏–º–∏ –º–∞—à–∏–Ω–∞–º–∏ —É –∫–ª–∞—Å—Ç–µ—Ä—ñ, –¥–µ –∫–æ–∂–Ω–∞ –º–∞—à–∏–Ω–∞ –º–æ–∂–µ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ –æ–±—Ä–æ–±–ª—è—Ç–∏ —Å–≤–æ—é —á–∞—Å—Ç–∏–Ω—É –¥–∞–Ω–∏—Ö. –£ —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ä–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–µ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –¥–æ–∑–≤–æ–ª—è—î –∑–Ω–∞—á–Ω–æ –∑–±—ñ–ª—å—à–∏—Ç–∏ –æ–±—Ä–æ–±–ª—é–≤–∞–Ω–∏–π –æ–±—Å—è–≥ –¥–∞–Ω–∏—Ö —Ç–∞ –ø—Ä–∏—Å–∫–æ—Ä–∏—Ç–∏ –æ–±—Ä–æ–±–∫—É –∑–∞–≤–¥—è–∫–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ–π —Ä–æ–±–æ—Ç—ñ –∫—ñ–ª—å–∫–æ—Ö –º–∞—à–∏–Ω.


–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—è MapReduce —î –ø–æ—Ç—É–∂–Ω–∏–º —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–µ–ª–∏–∫–∏—Ö –æ–±—Å—è–≥—ñ–≤ –¥–∞–Ω–∏—Ö —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –±–∞–≥–∞—Ç—å–æ—Ö –≥–∞–ª—É–∑—è—Ö, –≤–∫–ª—é—á–∞—é—á–∏ –∞–Ω–∞–ª—ñ—Ç–∏–∫—É –¥–∞–Ω–∏—Ö, –æ–±—Ä–æ–±–∫—É –ª–æ–≥—ñ–≤, –º–∞—à–∏–Ω–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—à—ñ —Å—Ñ–µ—Ä–∏. 

–ù–µ–∑–≤–∞–∂–∞—é—á–∏ –Ω–∞ —Å–≤–æ—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å, MapReduce —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—î—Ç—å—Å—è –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø—Ä–æ—Å—Ç–∏–º API, –¥–µ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –ª–∏—à–µ —Ñ—É–Ω–∫—Ü—ñ—ó map —Ç–∞ reduce. –¶–µ —Å–ø—Ä–æ—â—É—î —Ä–æ–∑—Ä–æ–±–∫—É —Å–∫–ª–∞–¥–Ω–∏—Ö –∑–∞–¥–∞—á –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö. 

–£ —Ä–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–∏—Ö —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è—Ö MapReduce, —Ç–∞–∫–∏—Ö —è–∫ Hadoop, –≤–±—É–¥–æ–≤–∞–Ω—ñ –º–µ—Ö–∞–Ω—ñ–∑–º–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å –≤–∏—Å–æ–∫—É –≤—ñ–¥–º–æ–≤–æ—Å—Ç—ñ–π–∫—ñ—Å—Ç—å. –¶–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–æ –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –Ω–∞–¥—ñ–π–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö —É –≤–µ–ª–∏–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö.



 üëâüèº –ì–æ—Ç–æ–≤—ñ –ø—Ä–æ–π—Ç–∏ –∫–≤—ñ–∑–∏ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è? –î–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–∫–æ–Ω–∞—î–º–æ—Å—è, –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –¥–æ–±—Ä–µ –≤–∏ –∑—Ä–æ–∑—É–º—ñ–ª–∏ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—é –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å.